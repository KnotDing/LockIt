name: Build and Release macOS App

on:
  push:
    branches:
      - main
    tags:
      - 'v*' # Trigger on tags like v1.0.0

jobs:
  build-and-release:
    runs-on: macos-latest
    permissions:
      contents: write # Grant write permission for GITHUB_TOKEN to create releases

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Xcode version
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '16.2.0'

    - name: Get App Version and Release Tag
      id: get_version
      run: |
        TAG=$(git describe --tags --abbrev=0 2>/dev/null || true)
        if [ -n "$TAG" ]; then
            VERSION=${TAG#v}
        else
            COMMIT_COUNT=$(git rev-list --count HEAD)
            VERSION="0.0.0-beta.${COMMIT_COUNT}"
        fi
        echo "RELEASE_VERSION=$VERSION" >> $GITHUB_ENV
    - name: Build Application
      run: |
        APP_NAME="LockIt"
        APP_BUNDLE_PATH="build/Build/Products/Release/${APP_NAME}.app"
        TAG=$(git describe --tags --abbrev=0 2>/dev/null || true)
        if [ -n "$TAG" ]; then
            VERSION=${TAG#v}
        else
            COMMIT_COUNT=$(git rev-list --count HEAD)
            VERSION="0.0.0-beta.${COMMIT_COUNT}"
        fi
        COMMIT_HASH=$(git rev-parse --short HEAD)
        echo "Building the application without signing..."
        xcodebuild clean build \
          -workspace LockIt.xcodeproj/project.xcworkspace \
          -scheme LockIt \
          -configuration Release \
          -destination "platform=macOS" \
          -derivedDataPath build \
          MARKETING_VERSION="$VERSION" \
          CURRENT_PROJECT_VERSION="$COMMIT_HASH" \
          CODE_SIGN_IDENTITY="" \
          CODE_SIGNING_REQUIRED=NO \
          CODE_SIGNING_ALLOWED=NO
        # Ad-hoc sign the application bundle
        codesign --force --deep --sign - "${APP_BUNDLE_PATH}"
    - name: Create DMG
      run: |
        APP_NAME="LockIt"
        APP_BUNDLE_PATH="build/Build/Products/Release/${APP_NAME}.app"
        DMG_NAME="${APP_NAME}-${{ env.RELEASE_VERSION }}.dmg"
        TEMP_DMG_NAME="${DMG_NAME}.temp.dmg"
        
        echo "Creating DMG for: $APP_BUNDLE_PATH"
        echo "Output DMG: $DMG_NAME"

        hdiutil create -ov -fs HFS+ -volname "${APP_NAME}" -size 100m "${TEMP_DMG_NAME}"
        hdiutil attach "${TEMP_DMG_NAME}" -mountpoint "/Volumes/${APP_NAME}"
        cp -R "${APP_BUNDLE_PATH}" "/Volumes/${APP_NAME}/"
        ln -s /Applications "/Volumes/${APP_NAME}/Applications"
        hdiutil detach "/Volumes/${APP_NAME}"
        hdiutil convert "${TEMP_DMG_NAME}" -format UDBZ -o "${DMG_NAME}"
        rm "${TEMP_DMG_NAME}"

    - name: Create GitHub Release
      if: startsWith(github.ref, 'refs/tags/v')
      uses: softprops/action-gh-release@v1
      with:
        files: LockIt-${{ env.RELEASE_VERSION }}.dmg
        name: Release ${{ env.RELEASE_VERSION }}
        tag_name: ${{ github.ref }}
        body: |
          # LockIt ${{ env.RELEASE_VERSION }}

          This is an automated release with an ad-hoc signature.
          
          ## Changes
          (Add release notes here)
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
